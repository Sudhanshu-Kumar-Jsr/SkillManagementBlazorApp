@page "/skills"
@inject SkillService SkillService
<h3>My Skills</h3>
<EditForm Model="newSkill" OnValidSubmit="AddSkill"> 
    <DataAnnotationsValidator /> 
    <InputText @bind-Value="newSkill.Name" placeholder="Skill name" class="form-control" /> 
    <InputText @bind-Value="newSkill.ProficiencyLevel" placeholder="Proficiency" class="form-control" />
    <button class="btn btn-primary mt-2">Add Skill</button>
</EditForm> 
@if (skills != null) 
{ 
    <h5 class="mt-4">Your Skills</h5> 
    <ul>
        <table class="table table-striped table-bordered">
            <thead class="table-dark">
                <tr>
                    <th>SL No.</th>
                    <th>Skill Name</th>
                    <th>Proficiency Level</th>
                </tr>
            </thead>
            <tbody>
                @for (int i = 0; i < skills.Count; i++)
                {
                    var skill = skills[i];
                    <tr>
                        <td>@(i + 1)</td> 
                        <td>@skill.Name</td>
                        <td>@skill.ProficiencyLevel</td>
                    </tr>
                }
            </tbody>
        </table>

        </ul> 
}
@code 
{ 
    SkillDto newSkill = new SkillDto();
    List<SkillDto>? skills;
    protected override async Task OnInitializedAsync() 
    {
        skills = await SkillService.GetMySkills(); 
    } 
    async Task AddSkill() 
    {
        var ok = await SkillService.AddSkill(newSkill); 
        if (ok)
        { 
            skills = await SkillService.GetMySkills();
            newSkill = new SkillDto();
        }
    } 
    } 